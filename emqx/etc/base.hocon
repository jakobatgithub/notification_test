# This file is generated. Do not edit.
# The configs are results of online config changes from UI/API/CLI.
# To persist configs in this file, copy the content to etc/base.hocon.
actions {
  http {
    client_connected_WH_D {
      connector = client_connected_WH_D
      created_at = 1740932981111
      description = ""
      enable = true
      last_modified_at = 1740940601812
      parameters {
        headers {content-type = "application/json"}
        max_retries = 2
        method = post
      }
      resource_opts {
        health_check_interval = "15s"
        inflight_window = 100
        max_buffer_bytes = "256MB"
        query_mode = async
        request_ttl = "45s"
        worker_pool_size = 16
      }
      tags = []
    }
    client_disconnected_WH_D {
      connector = client_disconnected_WH_D
      created_at = 1740936524524
      enable = true
      last_modified_at = 1740940593675
      parameters {
        headers {
          clientid = "${clientid}"
          content-type = "application/json"
          event = client_disconnected
          username = "${username}"
        }
        max_retries = 2
        method = post
      }
      resource_opts {
        health_check_interval = "15s"
        inflight_window = 100
        max_buffer_bytes = "256MB"
        query_mode = async
        request_ttl = "45s"
        worker_pool_size = 16
      }
      tags = []
    }
  }
}
connectors {
  http {
    client_connected_WH_D {
      connect_timeout = "15s"
      description = ""
      enable = true
      enable_pipelining = 100
      headers {
        clientid = "${clientid}"
        content-type = "application/json"
        event = client_connected
        username = "${username}"
      }
      pool_size = 8
      pool_type = random
      resource_opts {
        health_check_interval = "15s"
        start_after_created = true
        start_timeout = "5s"
      }
      ssl {
        ciphers = []
        depth = 10
        enable = false
        hibernate_after = "5s"
        log_level = notice
        reuse_sessions = true
        secure_renegotiate = true
        verify = verify_none
        versions = [
          "tlsv1.3",
          "tlsv1.2"
        ]
      }
      tags = []
      url = "http://192.168.178.33:8000/api/emqx/webhook/"
    }
    client_disconnected_WH_D {
      connect_timeout = "15s"
      enable = true
      enable_pipelining = 100
      headers {
        clientid = "${clientid}"
        content-type = "application/json"
        event = client_disconnected
        username = "${username}"
      }
      pool_size = 8
      pool_type = random
      resource_opts {
        health_check_interval = "15s"
        start_after_created = true
        start_timeout = "5s"
      }
      ssl {
        ciphers = []
        depth = 10
        enable = false
        hibernate_after = "5s"
        log_level = notice
        reuse_sessions = true
        secure_renegotiate = true
        verify = verify_none
        versions = [
          "tlsv1.3",
          "tlsv1.2"
        ]
      }
      tags = []
      url = "http://192.168.178.33:8000/api/emqx/webhook/"
    }
  }
}
log {
  console {}
  file {}
}
rule_engine {
  ignore_sys_message = true
  jq_function_default_timeout = "10s"
  rules {
    client_connected_WH_D {
      actions = [
        "http:client_connected_WH_D"
      ]
      description = ""
      enable = true
      metadata {last_modified_at = 1740940601846}
      name = ""
      sql = """~
        SELECT
          *
        FROM
          "$events/client_connected"~"""
    }
    client_disconnected_WH_D {
      actions = [
        "http:client_disconnected_WH_D"
      ]
      description = ""
      enable = true
      metadata {last_modified_at = 1740940593702}
      name = ""
      sql = """~
        SELECT
          *
        FROM
          "$events/client_disconnected"~"""
    }
  }
}
